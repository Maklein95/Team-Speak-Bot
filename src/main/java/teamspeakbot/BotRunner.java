package teamspeakbot;

import teamspeakbot.handler.CommandHandler;
import teamspeakbot.handler.EventHandler;
import com.github.theholywaffle.teamspeak3.TS3Api;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import teamspeakbot.update.UpdateManager;
import teamspeakbot.users.UserManager;

public class BotRunner {
    private static final Logger logger = LoggerFactory.getLogger(BotRunner.class);

    public static void main(String[] args) {
        logger.info("üöÄ –ó–∞–ø—É—Å–∫ TeamSpeak –±–æ—Ç–∞...");

        BotInitializer initializer = new BotInitializer();

        TS3Api api = initializer.getTs3ApiProvider().getApi();
        UserManager userManager = initializer.getUserManager();
        UpdateManager updateManager = initializer.getUpdateManager();

        try {
            int botClientId = api.whoAmI().getId(); // –ü–æ–ª—É—á–∞–µ–º ClientID –±–æ—Ç–∞
            logger.info("‚úÖ –û–ø—Ä–µ–¥–µ–ª–µ–Ω botClientId: {}", botClientId);
        } catch (Exception e) {
            logger.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ botClientId: {}", e.getMessage());
        }

        CommandHandler commandHandler = new CommandHandler(api, userManager);
        EventHandler eventHandler = new EventHandler(commandHandler, api, userManager);

        api.registerAllEvents();
        api.addTS3Listeners(eventHandler);

        logger.info("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!");

        if (updateManager != null) {
            logger.info("UpdateManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.");
            sendStartupUpdate(initializer, api, updateManager);
        }
    }

    private static void sendStartupUpdate(BotInitializer initializer, TS3Api api, UpdateManager updateManager) {
        if (updateManager == null) {
            return;
        }
        try {
            int channelId = Integer.parseInt(initializer.getConfig().getUpdateChannel());
            updateManager.sendUpdateMessage(api, channelId, "src/main/resources/updates.txt");
            logger.info("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª ID {}", channelId);
        } catch (NumberFormatException e) {
            logger.error("‚ùå –û—à–∏–±–∫–∞: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç `updateChannel` –≤ –∫–æ–Ω—Ñ–∏–≥–µ!", e);
        } catch (Exception e) {
            logger.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {}", e.getMessage());
        }
    }
}
