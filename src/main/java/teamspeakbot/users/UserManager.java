package teamspeakbot.users;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.sql.Timestamp;


public class UserManager {
    private final UserRepository userRepository;
    private static final Logger logger = LoggerFactory.getLogger(UserManager.class);


    public UserManager(UserRepository userRepository) {
        this.userRepository = userRepository;
    }

    public void insertUser(int clientDatabaseId, String defaultName) {
        userRepository.insertUser(clientDatabaseId, defaultName);
        logger.info("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID {} —Å –∏–º–µ–Ω–µ–º '{}'", clientDatabaseId, defaultName);
    }

    public String getUserName(int clientDatabaseId, String defaultName) {
        String username = userRepository.executeQuerySingleResult("get_user_name", clientDatabaseId, "user_name", String.class);
        logger.debug("üìå –ù–∞–π–¥–µ–Ω–æ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è ID {}: {}", clientDatabaseId, username);
        return username != null ? username : defaultName;
    }

    public boolean shouldGreet(int clientDatabaseId) {
        Timestamp lastGreet = userRepository.executeQuerySingleResult("should_greet", clientDatabaseId, "last_greeting_time", Timestamp.class);
        return lastGreet == null || (System.currentTimeMillis() - lastGreet.getTime() > 604800000);
    }

    public boolean isDndActive(int clientDatabaseId) {
        Boolean dndActive = userRepository.executeQuerySingleResult("is_dnd_active", clientDatabaseId, "dnd", Boolean.class);
        logger.debug("üìå DND —Å—Ç–∞—Ç—É—Å –¥–ª—è ID {}: {}", clientDatabaseId, dndActive);
        return Boolean.TRUE.equals(dndActive);
    }

    public void updateGreetingTime(int clientDatabaseId) {
        userRepository.executeUpdate("update_greeting_time", clientDatabaseId);
        logger.debug("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –¥–ª—è ID {}", clientDatabaseId);
    }

    public void setDndMode(int clientDatabaseId) {
        userRepository.executeUpdate("set_dnd_mode", clientDatabaseId);
        logger.debug("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω DND —Ä–µ–∂–∏–º –¥–ª—è ID {}", clientDatabaseId);
    }

    public void disableDndMode(int clientDatabaseId) {
        userRepository.executeUpdate("disable_dnd_mode", clientDatabaseId);
        logger.debug("‚ùå –û—Ç–∫–ª—é—á—ë–Ω DND —Ä–µ–∂–∏–º –¥–ª—è ID {}", clientDatabaseId);
    }
}
